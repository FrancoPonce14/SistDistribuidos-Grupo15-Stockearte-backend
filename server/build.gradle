plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.google.protobuf' version '0.8.17'
}

group = 'com.unla'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
            srcDir 'src/main/java'
            srcDir 'build/generated-sources/jaxb'
        }
    }
}

task genJaxb {
    ext.sourcesDir = "build/generated-sources/jaxb" 
    ext.schemaDir = "src/main/resources/xsd"         
    ext.schemas = ["Usuario.xsd", "Catalogo.xsd"]

    outputs.dir sourcesDir

    doLast() {
        ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", 
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)

            schemas.each { schema ->
                xjc(destdir: sourcesDir, schema: "${schemaDir}/${schema}") {
                    produces(dir: sourcesDir, includes: "*/.java")
                }
            }
        }
    }
}

compileJava.dependsOn genJaxb

configurations {
    jaxb
}

bootJar {
    archiveBaseName = 'gs-producing-web-service'
    archiveVersion = '0.1.0'
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.5'
    implementation 'net.devh:grpc-server-spring-boot-starter:2.13.0.RELEASE'
    runtimeOnly 'io.grpc:grpc-netty-shaded:1.43.1'
    implementation 'io.grpc:grpc-protobuf:1.43.1'
    implementation 'io.grpc:grpc-stub:1.43.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.springframework.kafka:spring-kafka:2.8.0'
    implementation 'org.apache.kafka:kafka-clients:2.8.0'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'com.google.protobuf:protobuf-java:3.21.12'
    implementation 'com.google.protobuf:protobuf-java-util:3.21.12'

    //implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'
    //implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2'
   	implementation 'wsdl4j:wsdl4j'
	jaxb("org.glassfish.jaxb:jaxb-xjc")
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.43.1'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
